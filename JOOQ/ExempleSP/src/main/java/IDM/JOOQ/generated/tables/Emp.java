/**
 * This class is generated by jOOQ
 */
package IDM.JOOQ.generated.tables;


import IDM.JOOQ.generated.Library;
import IDM.JOOQ.generated.tables.records.EmpRecord;

import java.math.BigDecimal;
import java.sql.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Emp extends TableImpl<EmpRecord> {

    private static final long serialVersionUID = 957086603;

    /**
     * The reference instance of <code>library.emp</code>
     */
    public static final Emp EMP = new Emp();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EmpRecord> getRecordType() {
        return EmpRecord.class;
    }

    /**
     * The column <code>library.emp.empno</code>.
     */
    public final TableField<EmpRecord, Short> EMPNO = createField("empno", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>library.emp.ename</code>.
     */
    public final TableField<EmpRecord, String> ENAME = createField("ename", org.jooq.impl.SQLDataType.VARCHAR.length(10), this, "");

    /**
     * The column <code>library.emp.job</code>.
     */
    public final TableField<EmpRecord, String> JOB = createField("job", org.jooq.impl.SQLDataType.VARCHAR.length(9), this, "");

    /**
     * The column <code>library.emp.mgr</code>.
     */
    public final TableField<EmpRecord, Short> MGR = createField("mgr", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>library.emp.hiredate</code>.
     */
    public final TableField<EmpRecord, Date> HIREDATE = createField("hiredate", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>library.emp.sal</code>.
     */
    public final TableField<EmpRecord, BigDecimal> SAL = createField("sal", org.jooq.impl.SQLDataType.DECIMAL.precision(7, 2), this, "");

    /**
     * The column <code>library.emp.comm</code>.
     */
    public final TableField<EmpRecord, BigDecimal> COMM = createField("comm", org.jooq.impl.SQLDataType.DECIMAL.precision(7, 2), this, "");

    /**
     * The column <code>library.emp.deptno</code>.
     */
    public final TableField<EmpRecord, Byte> DEPTNO = createField("deptno", org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * Create a <code>library.emp</code> table reference
     */
    public Emp() {
        this("emp", null);
    }

    /**
     * Create an aliased <code>library.emp</code> table reference
     */
    public Emp(String alias) {
        this(alias, EMP);
    }

    private Emp(String alias, Table<EmpRecord> aliased) {
        this(alias, aliased, null);
    }

    private Emp(String alias, Table<EmpRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Library.LIBRARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Emp as(String alias) {
        return new Emp(alias, this);
    }

    /**
     * Rename this table
     */
    public Emp rename(String name) {
        return new Emp(name, null);
    }
}
